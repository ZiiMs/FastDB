import mongoose, { Connection } from 'mongoose'

// const Admin = mongoose.mongo.Admin

interface Results {
    databases: Databases[]
    totalSize: number
    totalSizeMb: number
    ok: number
}

interface Databases {
    name: string
    sizeOnDisk: number
    empty: boolean
}

export const connect = async (URI: string, port: number) => {
    const connString = `mongodb://${URI}:${port}`
    console.log(port)
    const conn = await mongoose
        .createConnection(connString, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        })
        .catch((err) => {
            console.log(err)
            return err
        })
    return conn
}

export const loadDatabases = (conn: Connection) => {
    let databases: any
    conn.db.admin().listDatabases((err: any, results: Results) => {
        if (err) {
            console.log(`Error: ${err}`)
            return
        }
        // console.log(JSON.stringify(results))
        if (results.databases) {
            databases = results.databases
            // eslint-disable-next-line consistent-return
            return databases
        }
    })
}

// Generated by https://quicktype.io
